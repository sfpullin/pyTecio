#include "MPIFileIOStream.h"
#include "ThirdPartyHeadersBegin.h"
#include <iostream>
#include "ThirdPartyHeadersEnd.h"
#include "FileIOStatistics.h"
using namespace tecplot::teciompi; struct MPIFileIOStream::Impl { std::string             ___2459; MPI_Comm                m_comm; MPI_File                m_fileHandle; ___372               m_isAscii; DataFileType_e          m_dataFileType; ___3931::FileIOStatistics m_statistics; Impl(std::string const& ___1392, MPI_Comm comm) : ___2459(___1392) , m_comm(comm) , m_fileHandle(NULL) , m_isAscii(___1303) , m_dataFileType(___843) {} }; tecplot::teciompi::MPIFileIOStream::MPIFileIOStream(std::string const& ___1392, MPI_Comm comm) : m_impl(new Impl(___1392, comm)) {} tecplot::teciompi::MPIFileIOStream::~MPIFileIOStream() {} ___372 MPIFileIOStream::___2039() const { return m_impl->m_fileHandle != NULL; } ___372 tecplot::teciompi::MPIFileIOStream::close(bool ___3359) { ___372 ___3356 = ___4224; if (___2039()) { (void)MPI_File_sync(m_impl->m_fileHandle); ___3356 = (MPI_File_close(&m_impl->m_fileHandle) == MPI_SUCCESS); m_impl->m_fileHandle = NULL; if (!___3359) { int ___2674; (void)MPI_Comm_rank(m_impl->m_comm, &___2674); if (___2674 == 0) (void)MPI_File_delete(const_cast<char*>(___1392().c_str()), MPI_INFO_NULL); } } ENSURE(!___2039()); ENSURE(VALID_BOOLEAN(___3356)); return ___3356; } tecplot::___3931::___1391 tecplot::teciompi::MPIFileIOStream::fileLoc() { REQUIRE(___2039()); MPI_Offset mpiOffset = 0; (void)MPI_File_get_position(m_impl->m_fileHandle, &mpiOffset); return static_cast<___3931::___1391>(mpiOffset); } ___372 tecplot::teciompi::MPIFileIOStream::___3458() { REQUIRE(___2039()); MPI_Offset mpiOffset = 0; ___372 ___3356 = (MPI_File_seek(m_impl->m_fileHandle, mpiOffset, MPI_SEEK_SET)== MPI_SUCCESS); ENSURE(VALID_BOOLEAN(___3356)); return ___3356; } ___372 tecplot::teciompi::MPIFileIOStream::___3457(___3931::___1391 fileLoc) { REQUIRE(___2039()); MPI_Offset mpiOffset = static_cast<MPI_Offset>(fileLoc); ___372 ___3356 = (MPI_File_seek(m_impl->m_fileHandle, mpiOffset, MPI_SEEK_SET) == MPI_SUCCESS); ENSURE(VALID_BOOLEAN(___3356)); return ___3356; } ___372 tecplot::teciompi::MPIFileIOStream::seekToFileEnd() { REQUIRE(___2039()); MPI_Offset mpiOffset = 0; ___372 ___3356 = (MPI_File_get_size(m_impl->m_fileHandle, &mpiOffset) == MPI_SUCCESS) && (MPI_File_seek(m_impl->m_fileHandle, mpiOffset, MPI_SEEK_SET) == MPI_SUCCESS); ENSURE(VALID_BOOLEAN(___3356)); return ___3356; } std::string const& tecplot::teciompi::MPIFileIOStream::___1392() const { return m_impl->___2459; } void tecplot::teciompi::MPIFileIOStream::___3492(___372 ___2000) { REQUIRE(VALID_BOOLEAN(___2000)); m_impl->m_isAscii = ___2000; } ___372 tecplot::teciompi::MPIFileIOStream::___2000() const { return m_impl->m_isAscii; } void tecplot::teciompi::MPIFileIOStream::setDataFileType(DataFileType_e ___842) { REQUIRE(VALID_ENUM(___842, DataFileType_e)); m_impl->m_dataFileType = ___842; } DataFileType_e tecplot::teciompi::MPIFileIOStream::___842() const { return m_impl->m_dataFileType; } tecplot::___3931::FileIOStatistics& tecplot::teciompi::MPIFileIOStream::statistics()
{ return m_impl->m_statistics; } MPI_File tecplot::teciompi::MPIFileIOStream::fileHandle() const { return m_impl->m_fileHandle; } MPI_Comm tecplot::teciompi::MPIFileIOStream::comm() const { return m_impl->m_comm; } ___372 MPIFileIOStream::open(int ___2502) { REQUIRE(!___2039()); int mpiResult = MPI_File_open(m_impl->m_comm, const_cast<char*>(___1392().c_str()), ___2502, MPI_INFO_NULL, &m_impl->m_fileHandle); ___372 ___3356 = (mpiResult == MPI_SUCCESS); if (!___3356) { m_impl->m_fileHandle = NULL; char msg[MPI_MAX_ERROR_STRING]; int resultlen; MPI_Error_string(mpiResult, msg, &resultlen); std::cout << "Error opening file: " << msg << std::endl; } ENSURE(VALID_BOOLEAN(___3356)); return ___3356; }
